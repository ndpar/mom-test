<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
		                   http://www.springframework.org/schema/rabbit
                           http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
                           http://www.springframework.org/schema/tx
		                   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:component-scan base-package="com.ndpar"/>
    <context:mbean-export/>
    <tx:annotation-driven/>

    <bean id="jmsQueueListener" class="com.ndpar.JmsQueueListener"/>

    <bean id="jmsErrorHandler" class="com.ndpar.JmsErrorHandler"/>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
          p:corePoolSize="5"
          p:maxPoolSize="25"
          p:queueCapacity="25">
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>


    <!-- ActiveMQ -->

    <bean id="activeConnectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory"
          p:brokerURL="tcp://localhost:61616"/>

    <bean id="activeQueue" class="org.apache.activemq.command.ActiveMQQueue" c:name="queue/Test"/>

    <bean id="activeSender" class="com.ndpar.JmsQueueSender"
          p:jmsTemplate-ref="activeTemplate"
          p:testQueue-ref="activeQueue"/>

    <bean id="activeTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="activeConnectionFactory"
          p:defaultDestination-ref="activeQueue"
          p:pubSubDomain="false"/>

    <bean id="activeContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          p:connectionFactory-ref="activeConnectionFactory"
          p:destination-ref="activeQueue"
          p:messageListener-ref="jmsQueueListener"
          p:pubSubDomain="false"
          p:sessionTransacted="true"
          p:errorHandler-ref="jmsErrorHandler"
          p:concurrency="25"/>


    <!-- HornetQ -->

    <bean id="hornetQJndiTemplate" class="org.springframework.jndi.JndiTemplate" lazy-init="true">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                <prop key="java.naming.provider.url">jnp://localhost:1099</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
            </props>
        </property>
    </bean>
    <bean id="hornetConnectionFactory" p:username="guest" p:password="guest"
          class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory">
            <bean class="org.springframework.jndi.JndiObjectFactoryBean" depends-on="hornetQJndiTemplate"
                  lazy-init="true"
                  p:jndiTemplate-ref="hornetQJndiTemplate" p:jndiName="/ConnectionFactory"/>
        </property>
    </bean>
    <bean id="hornetQueue" class="org.springframework.jndi.JndiObjectFactoryBean"
          depends-on="hornetQJndiTemplate"
          lazy-init="true"
          p:jndiTemplate-ref="hornetQJndiTemplate"
          p:jndiName="/queue/Test"/>

    <bean id="hornetSender" class="com.ndpar.JmsQueueSender"
          p:jmsTemplate-ref="hornetTemplate"
          p:testQueue-ref="hornetQueue"/>

    <bean id="hornetTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="hornetConnectionFactory"
          p:defaultDestination-ref="hornetQueue"
          p:pubSubDomain="false"/>

    <bean id="hornetContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          p:connectionFactory-ref="hornetConnectionFactory"
          p:destination-ref="hornetQueue"
          p:messageListener-ref="jmsQueueListener"
          p:pubSubDomain="false"
          p:sessionTransacted="true"
          p:errorHandler-ref="jmsErrorHandler"
          p:concurrency="25"/>


    <!-- RabbitMQ -->

    <rabbit:connection-factory id="rabbitConnectionFactory" channel-cache-size="25"/>

    <rabbit:template id="amqpTemplate" connection-factory="rabbitConnectionFactory"/>

    <rabbit:queue id="amqQueue" name="queue.Test"/>

    <rabbit:listener-container connection-factory="rabbitConnectionFactory" concurrency="25">
        <rabbit:listener queues="amqQueue" ref="rabbitMessageListener"/>
    </rabbit:listener-container>
</beans>
